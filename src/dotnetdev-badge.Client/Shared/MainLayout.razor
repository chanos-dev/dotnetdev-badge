@using MudBlazor
@inherits LayoutComponentBase
@inject NavigationManager NavManager

<MudAppBar Color="Color.Primary" Fixed="false">
    <MudIcon Icon="@Icons.Material.TwoTone.Badge" />
    <MudText Typo="Typo.h6" Class="ml-4 mr-4 pt-1 pb-2" >.NET Dev Badge</MudText>
    <MudButton Color="Color.Inherit" Href="/" StartIcon="@GetActiveIcon(string.Empty)">
        <MudText>Profile Badge</MudText>
    </MudButton>
    <MudButton Color="Color.Inherit" Href="/guide" StartIcon="@GetActiveIcon("guide")">
        <MudText>Guide</MudText>
    </MudButton>
    <MudSpacer />        
    <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                         Icon="@Icons.Material.Outlined.LightMode" Color="@Color.Warning"
                         ToggledIcon="@Icons.Material.Outlined.DarkMode" ToggledColor="@Color.Dark" />
    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/chanos-dev/dotnetdev-badge" Target="_blank" />    
</MudAppBar>

<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Large">
        @Body
    </MudContainer>
</MudMainContent>

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode;

    private string GetActiveIcon(string href)
    {
        string route = NavManager.ToBaseRelativePath(NavManager.Uri);
        return string.Equals(route, href, StringComparison.OrdinalIgnoreCase) ? Icons.Material.Outlined.ArrowRight : string.Empty;
    }
}